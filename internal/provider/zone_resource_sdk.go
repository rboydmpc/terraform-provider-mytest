// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"MyTest/internal/sdk/pkg/models/operations"
	"MyTest/internal/sdk/pkg/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"time"
)

func (r *ZoneResourceModel) ToCreateSDKType() *shared.ZoneCreate {
	accountID := new(int64)
	if !r.AccountID.IsUnknown() && !r.AccountID.IsNull() {
		*accountID = r.AccountID.ValueInt64()
	} else {
		accountID = nil
	}
	autoRecoverPowerState := new(bool)
	if !r.AutoRecoverPowerState.IsUnknown() && !r.AutoRecoverPowerState.IsNull() {
		*autoRecoverPowerState = r.AutoRecoverPowerState.ValueBool()
	} else {
		autoRecoverPowerState = nil
	}
	code := new(string)
	if !r.Code.IsUnknown() && !r.Code.IsNull() {
		*code = r.Code.ValueString()
	} else {
		code = nil
	}
	var config *shared.ZoneCreateConfig
	if r.Config != nil {
		config = &shared.ZoneCreateConfig{}
	}
	var credential *shared.ZoneCreateCredential
	if r.Credential != nil {
		credential = &shared.ZoneCreateCredential{}
	}
	description := new(string)
	if !r.Description.IsUnknown() && !r.Description.IsNull() {
		*description = r.Description.ValueString()
	} else {
		description = nil
	}
	enabled := new(bool)
	if !r.Enabled.IsUnknown() && !r.Enabled.IsNull() {
		*enabled = r.Enabled.ValueBool()
	} else {
		enabled = nil
	}
	groupID := r.GroupID.ValueInt64()
	linkedAccountID := new(int64)
	if !r.LinkedAccountID.IsUnknown() && !r.LinkedAccountID.IsNull() {
		*linkedAccountID = r.LinkedAccountID.ValueInt64()
	} else {
		linkedAccountID = nil
	}
	location := new(string)
	if !r.Location.IsUnknown() && !r.Location.IsNull() {
		*location = r.Location.ValueString()
	} else {
		location = nil
	}
	name := r.Name.ValueString()
	scalePriority := new(int64)
	if !r.ScalePriority.IsUnknown() && !r.ScalePriority.IsNull() {
		*scalePriority = r.ScalePriority.ValueInt64()
	} else {
		scalePriority = nil
	}
	securityMode := new(string)
	if !r.SecurityMode.IsUnknown() && !r.SecurityMode.IsNull() {
		*securityMode = r.SecurityMode.ValueString()
	} else {
		securityMode = nil
	}
	visibility := new(shared.ZoneCreateVisibility)
	if !r.Visibility.IsUnknown() && !r.Visibility.IsNull() {
		*visibility = shared.ZoneCreateVisibility(r.Visibility.ValueString())
	} else {
		visibility = nil
	}
	code1 := new(string)
	if !r.ZoneType.Code.IsUnknown() && !r.ZoneType.Code.IsNull() {
		*code1 = r.ZoneType.Code.ValueString()
	} else {
		code1 = nil
	}
	zoneType := shared.ZoneCreateZoneType{
		Code: code1,
	}
	out := shared.ZoneCreate{
		AccountID:             accountID,
		AutoRecoverPowerState: autoRecoverPowerState,
		Code:                  code,
		Config:                config,
		Credential:            credential,
		Description:           description,
		Enabled:               enabled,
		GroupID:               groupID,
		LinkedAccountID:       linkedAccountID,
		Location:              location,
		Name:                  name,
		ScalePriority:         scalePriority,
		SecurityMode:          securityMode,
		Visibility:            visibility,
		ZoneType:              zoneType,
	}
	return &out
}

func (r *ZoneResourceModel) RefreshFromCreateResponse(resp *operations.AddClouds200ApplicationJSON) {
	if resp.Success != nil {
		r.Success = types.BoolValue(*resp.Success)
	} else {
		r.Success = types.BoolNull()
	}
	if r.Zone == nil {
		r.Zone = &Zone{}
	}
	if resp.Zone == nil {
		r.Zone = nil
	} else {
		r.Zone = &Zone{}
		if r.Zone.Account == nil {
			r.Zone.Account = &ZoneAccount{}
		}
		if resp.Zone.Account == nil {
			r.Zone.Account = nil
		} else {
			r.Zone.Account = &ZoneAccount{}
			if resp.Zone.Account.ID != nil {
				r.Zone.Account.ID = types.Int64Value(*resp.Zone.Account.ID)
			} else {
				r.Zone.Account.ID = types.Int64Null()
			}
			if resp.Zone.Account.Name != nil {
				r.Zone.Account.Name = types.StringValue(*resp.Zone.Account.Name)
			} else {
				r.Zone.Account.Name = types.StringNull()
			}
		}
		if resp.Zone.AccountID != nil {
			r.Zone.AccountID = types.Int64Value(*resp.Zone.AccountID)
		} else {
			r.Zone.AccountID = types.Int64Null()
		}
		if resp.Zone.AgentMode != nil {
			r.Zone.AgentMode = types.StringValue(*resp.Zone.AgentMode)
		} else {
			r.Zone.AgentMode = types.StringNull()
		}
		if resp.Zone.APIProxy != nil {
			r.Zone.APIProxy = types.StringValue(*resp.Zone.APIProxy)
		} else {
			r.Zone.APIProxy = types.StringNull()
		}
		if resp.Zone.AutoRecoverPowerState != nil {
			r.Zone.AutoRecoverPowerState = types.BoolValue(*resp.Zone.AutoRecoverPowerState)
		} else {
			r.Zone.AutoRecoverPowerState = types.BoolNull()
		}
		if resp.Zone.Code != nil {
			r.Zone.Code = types.StringValue(*resp.Zone.Code)
		} else {
			r.Zone.Code = types.StringNull()
		}
		if r.Zone.Config == nil {
			r.Zone.Config = &ZoneConfig1{}
		}
		if resp.Zone.Config == nil {
			r.Zone.Config = nil
		} else {
			r.Zone.Config = &ZoneConfig1{}
			if resp.Zone.Config.EnableNetworkTypeSelection != nil {
				r.Zone.Config.EnableNetworkTypeSelection = types.StringValue(*resp.Zone.Config.EnableNetworkTypeSelection)
			} else {
				r.Zone.Config.EnableNetworkTypeSelection = types.StringNull()
			}
			if resp.Zone.Config.UseHostCredentials != nil {
				r.Zone.Config.UseHostCredentials = types.StringValue(*resp.Zone.Config.UseHostCredentials)
			} else {
				r.Zone.Config.UseHostCredentials = types.StringNull()
			}
			if resp.Zone.Config.AccessKey != nil {
				r.Zone.Config.AccessKey = types.StringValue(*resp.Zone.Config.AccessKey)
			} else {
				r.Zone.Config.AccessKey = types.StringNull()
			}
			if resp.Zone.Config.AccountType != nil {
				r.Zone.Config.AccountType = types.StringValue(*resp.Zone.Config.AccountType)
			} else {
				r.Zone.Config.AccountType = types.StringNull()
			}
			if resp.Zone.Config.APIURL != nil {
				r.Zone.Config.APIURL = types.StringValue(*resp.Zone.Config.APIURL)
			} else {
				r.Zone.Config.APIURL = types.StringNull()
			}
			if resp.Zone.Config.APIVersion != nil {
				r.Zone.Config.APIVersion = types.StringValue(*resp.Zone.Config.APIVersion)
			} else {
				r.Zone.Config.APIVersion = types.StringNull()
			}
			if resp.Zone.Config.ApplianceURL != nil {
				r.Zone.Config.ApplianceURL = types.StringValue(*resp.Zone.Config.ApplianceURL)
			} else {
				r.Zone.Config.ApplianceURL = types.StringNull()
			}
			if resp.Zone.Config.AzureCostingMode != nil {
				r.Zone.Config.AzureCostingMode = types.StringValue(*resp.Zone.Config.AzureCostingMode)
			} else {
				r.Zone.Config.AzureCostingMode = types.StringNull()
			}
			if resp.Zone.Config.BackupMode != nil {
				r.Zone.Config.BackupMode = types.StringValue(*resp.Zone.Config.BackupMode)
			} else {
				r.Zone.Config.BackupMode = types.StringNull()
			}
			if resp.Zone.Config.CertificateProvider != nil {
				r.Zone.Config.CertificateProvider = types.StringValue(*resp.Zone.Config.CertificateProvider)
			} else {
				r.Zone.Config.CertificateProvider = types.StringNull()
			}
			if resp.Zone.Config.ClientEmail != nil {
				r.Zone.Config.ClientEmail = types.StringValue(*resp.Zone.Config.ClientEmail)
			} else {
				r.Zone.Config.ClientEmail = types.StringNull()
			}
			if resp.Zone.Config.ClientID != nil {
				r.Zone.Config.ClientID = types.StringValue(*resp.Zone.Config.ClientID)
			} else {
				r.Zone.Config.ClientID = types.StringNull()
			}
			if resp.Zone.Config.ClientSecret != nil {
				r.Zone.Config.ClientSecret = types.StringValue(*resp.Zone.Config.ClientSecret)
			} else {
				r.Zone.Config.ClientSecret = types.StringNull()
			}
			if resp.Zone.Config.ClientSecretHash != nil {
				r.Zone.Config.ClientSecretHash = types.StringValue(*resp.Zone.Config.ClientSecretHash)
			} else {
				r.Zone.Config.ClientSecretHash = types.StringNull()
			}
			if resp.Zone.Config.CloudType != nil {
				r.Zone.Config.CloudType = types.StringValue(*resp.Zone.Config.CloudType)
			} else {
				r.Zone.Config.CloudType = types.StringNull()
			}
			if resp.Zone.Config.Cluster != nil {
				r.Zone.Config.Cluster = types.StringValue(*resp.Zone.Config.Cluster)
			} else {
				r.Zone.Config.Cluster = types.StringNull()
			}
			if resp.Zone.Config.ConfigCmID != nil {
				r.Zone.Config.ConfigCmID = types.StringValue(*resp.Zone.Config.ConfigCmID)
			} else {
				r.Zone.Config.ConfigCmID = types.StringNull()
			}
			if resp.Zone.Config.ConfigCmdbDiscovery != nil {
				r.Zone.Config.ConfigCmdbDiscovery = types.BoolValue(*resp.Zone.Config.ConfigCmdbDiscovery)
			} else {
				r.Zone.Config.ConfigCmdbDiscovery = types.BoolNull()
			}
			if resp.Zone.Config.ConfigCmdbID != nil {
				r.Zone.Config.ConfigCmdbID = types.StringValue(*resp.Zone.Config.ConfigCmdbID)
			} else {
				r.Zone.Config.ConfigCmdbID = types.StringNull()
			}
			if resp.Zone.Config.ConfigManagementID != nil {
				r.Zone.Config.ConfigManagementID = types.StringValue(*resp.Zone.Config.ConfigManagementID)
			} else {
				r.Zone.Config.ConfigManagementID = types.StringNull()
			}
			if resp.Zone.Config.CostingAccessKey != nil {
				r.Zone.Config.CostingAccessKey = types.StringValue(*resp.Zone.Config.CostingAccessKey)
			} else {
				r.Zone.Config.CostingAccessKey = types.StringNull()
			}
			if resp.Zone.Config.CostingBucket != nil {
				r.Zone.Config.CostingBucket = types.StringValue(*resp.Zone.Config.CostingBucket)
			} else {
				r.Zone.Config.CostingBucket = types.StringNull()
			}
			if resp.Zone.Config.CostingBucketName != nil {
				r.Zone.Config.CostingBucketName = types.StringValue(*resp.Zone.Config.CostingBucketName)
			} else {
				r.Zone.Config.CostingBucketName = types.StringNull()
			}
			if resp.Zone.Config.CostingFolder != nil {
				r.Zone.Config.CostingFolder = types.StringValue(*resp.Zone.Config.CostingFolder)
			} else {
				r.Zone.Config.CostingFolder = types.StringNull()
			}
			if resp.Zone.Config.CostingRegion != nil {
				r.Zone.Config.CostingRegion = types.StringValue(*resp.Zone.Config.CostingRegion)
			} else {
				r.Zone.Config.CostingRegion = types.StringNull()
			}
			if resp.Zone.Config.CostingReport != nil {
				r.Zone.Config.CostingReport = types.StringValue(*resp.Zone.Config.CostingReport)
			} else {
				r.Zone.Config.CostingReport = types.StringNull()
			}
			if resp.Zone.Config.CostingReportName != nil {
				r.Zone.Config.CostingReportName = types.StringValue(*resp.Zone.Config.CostingReportName)
			} else {
				r.Zone.Config.CostingReportName = types.StringNull()
			}
			if resp.Zone.Config.CostingSecretKey != nil {
				r.Zone.Config.CostingSecretKey = types.StringValue(*resp.Zone.Config.CostingSecretKey)
			} else {
				r.Zone.Config.CostingSecretKey = types.StringNull()
			}
			if resp.Zone.Config.CostingSecretKeyHash != nil {
				r.Zone.Config.CostingSecretKeyHash = types.StringValue(*resp.Zone.Config.CostingSecretKeyHash)
			} else {
				r.Zone.Config.CostingSecretKeyHash = types.StringNull()
			}
			if resp.Zone.Config.CspClientID != nil {
				r.Zone.Config.CspClientID = types.StringValue(*resp.Zone.Config.CspClientID)
			} else {
				r.Zone.Config.CspClientID = types.StringNull()
			}
			if resp.Zone.Config.CspClientSecret != nil {
				r.Zone.Config.CspClientSecret = types.StringValue(*resp.Zone.Config.CspClientSecret)
			} else {
				r.Zone.Config.CspClientSecret = types.StringNull()
			}
			if resp.Zone.Config.CspClientSecretHash != nil {
				r.Zone.Config.CspClientSecretHash = types.StringValue(*resp.Zone.Config.CspClientSecretHash)
			} else {
				r.Zone.Config.CspClientSecretHash = types.StringNull()
			}
			if resp.Zone.Config.CspCustomer != nil {
				r.Zone.Config.CspCustomer = types.StringValue(*resp.Zone.Config.CspCustomer)
			} else {
				r.Zone.Config.CspCustomer = types.StringNull()
			}
			if resp.Zone.Config.CspTenantID != nil {
				r.Zone.Config.CspTenantID = types.StringValue(*resp.Zone.Config.CspTenantID)
			} else {
				r.Zone.Config.CspTenantID = types.StringNull()
			}
			if resp.Zone.Config.Datacenter != nil {
				r.Zone.Config.Datacenter = types.StringValue(*resp.Zone.Config.Datacenter)
			} else {
				r.Zone.Config.Datacenter = types.StringNull()
			}
			if resp.Zone.Config.DatacenterID != nil {
				r.Zone.Config.DatacenterID = types.StringValue(*resp.Zone.Config.DatacenterID)
			} else {
				r.Zone.Config.DatacenterID = types.StringNull()
			}
			if resp.Zone.Config.DatacenterName != nil {
				r.Zone.Config.DatacenterName = types.StringValue(*resp.Zone.Config.DatacenterName)
			} else {
				r.Zone.Config.DatacenterName = types.StringNull()
			}
			if resp.Zone.Config.DiskEncryption != nil {
				r.Zone.Config.DiskEncryption = types.StringValue(*resp.Zone.Config.DiskEncryption)
			} else {
				r.Zone.Config.DiskEncryption = types.StringNull()
			}
			if resp.Zone.Config.DiskStorageType != nil {
				r.Zone.Config.DiskStorageType = types.StringValue(*resp.Zone.Config.DiskStorageType)
			} else {
				r.Zone.Config.DiskStorageType = types.StringNull()
			}
			if resp.Zone.Config.DistributedWorkerID != nil {
				r.Zone.Config.DistributedWorkerID = types.StringValue(*resp.Zone.Config.DistributedWorkerID)
			} else {
				r.Zone.Config.DistributedWorkerID = types.StringNull()
			}
			if resp.Zone.Config.DNSIntegrationID != nil {
				r.Zone.Config.DNSIntegrationID = types.StringValue(*resp.Zone.Config.DNSIntegrationID)
			} else {
				r.Zone.Config.DNSIntegrationID = types.StringNull()
			}
			if resp.Zone.Config.EbsEncryption != nil {
				r.Zone.Config.EbsEncryption = types.StringValue(*resp.Zone.Config.EbsEncryption)
			} else {
				r.Zone.Config.EbsEncryption = types.StringNull()
			}
			if resp.Zone.Config.EnableDiskTypeSelection != nil {
				r.Zone.Config.EnableDiskTypeSelection = types.StringValue(*resp.Zone.Config.EnableDiskTypeSelection)
			} else {
				r.Zone.Config.EnableDiskTypeSelection = types.StringNull()
			}
			if resp.Zone.Config.EnableVnc != nil {
				r.Zone.Config.EnableVnc = types.StringValue(*resp.Zone.Config.EnableVnc)
			} else {
				r.Zone.Config.EnableVnc = types.StringNull()
			}
			if resp.Zone.Config.EncryptionSet != nil {
				r.Zone.Config.EncryptionSet = types.StringValue(*resp.Zone.Config.EncryptionSet)
			} else {
				r.Zone.Config.EncryptionSet = types.StringNull()
			}
			if resp.Zone.Config.Endpoint != nil {
				r.Zone.Config.Endpoint = types.StringValue(*resp.Zone.Config.Endpoint)
			} else {
				r.Zone.Config.Endpoint = types.StringNull()
			}
			if resp.Zone.Config.GoogleRegionID != nil {
				r.Zone.Config.GoogleRegionID = types.StringValue(*resp.Zone.Config.GoogleRegionID)
			} else {
				r.Zone.Config.GoogleRegionID = types.StringNull()
			}
			if resp.Zone.Config.HideHostSelection != nil {
				r.Zone.Config.HideHostSelection = types.StringValue(*resp.Zone.Config.HideHostSelection)
			} else {
				r.Zone.Config.HideHostSelection = types.StringNull()
			}
			if resp.Zone.Config.ImageStoreID != nil {
				r.Zone.Config.ImageStoreID = types.StringValue(*resp.Zone.Config.ImageStoreID)
			} else {
				r.Zone.Config.ImageStoreID = types.StringNull()
			}
			if resp.Zone.Config.ImportExisting != nil {
				r.Zone.Config.ImportExisting = types.StringValue(*resp.Zone.Config.ImportExisting)
			} else {
				r.Zone.Config.ImportExisting = types.StringNull()
			}
			if resp.Zone.Config.InventoryLevel != nil {
				r.Zone.Config.InventoryLevel = types.StringValue(*resp.Zone.Config.InventoryLevel)
			} else {
				r.Zone.Config.InventoryLevel = types.StringNull()
			}
			if resp.Zone.Config.IsVpc != nil {
				r.Zone.Config.IsVpc = types.StringValue(*resp.Zone.Config.IsVpc)
			} else {
				r.Zone.Config.IsVpc = types.StringNull()
			}
			if resp.Zone.Config.KubeURL != nil {
				r.Zone.Config.KubeURL = types.StringValue(*resp.Zone.Config.KubeURL)
			} else {
				r.Zone.Config.KubeURL = types.StringNull()
			}
			if r.Zone.Config.NetworkServer == nil {
				r.Zone.Config.NetworkServer = &ZoneConfigNetworkServer{}
			}
			if resp.Zone.Config.NetworkServer == nil {
				r.Zone.Config.NetworkServer = nil
			} else {
				r.Zone.Config.NetworkServer = &ZoneConfigNetworkServer{}
				if resp.Zone.Config.NetworkServer.ID != nil {
					r.Zone.Config.NetworkServer.ID = types.StringValue(*resp.Zone.Config.NetworkServer.ID)
				} else {
					r.Zone.Config.NetworkServer.ID = types.StringNull()
				}
			}
			if resp.Zone.Config.NetworkServerID != nil {
				r.Zone.Config.NetworkServerID = types.StringValue(*resp.Zone.Config.NetworkServerID)
			} else {
				r.Zone.Config.NetworkServerID = types.StringNull()
			}
			if resp.Zone.Config.Password != nil {
				r.Zone.Config.Password = types.StringValue(*resp.Zone.Config.Password)
			} else {
				r.Zone.Config.Password = types.StringNull()
			}
			if resp.Zone.Config.PasswordHash != nil {
				r.Zone.Config.PasswordHash = types.StringValue(*resp.Zone.Config.PasswordHash)
			} else {
				r.Zone.Config.PasswordHash = types.StringNull()
			}
			if resp.Zone.Config.PrivateKey != nil {
				r.Zone.Config.PrivateKey = types.StringValue(*resp.Zone.Config.PrivateKey)
			} else {
				r.Zone.Config.PrivateKey = types.StringNull()
			}
			if resp.Zone.Config.PrivateKeyHash != nil {
				r.Zone.Config.PrivateKeyHash = types.StringValue(*resp.Zone.Config.PrivateKeyHash)
			} else {
				r.Zone.Config.PrivateKeyHash = types.StringNull()
			}
			if resp.Zone.Config.ProjectID != nil {
				r.Zone.Config.ProjectID = types.StringValue(*resp.Zone.Config.ProjectID)
			} else {
				r.Zone.Config.ProjectID = types.StringNull()
			}
			if resp.Zone.Config.ReplicationMode != nil {
				r.Zone.Config.ReplicationMode = types.StringValue(*resp.Zone.Config.ReplicationMode)
			} else {
				r.Zone.Config.ReplicationMode = types.StringNull()
			}
			if resp.Zone.Config.ResourceGroup != nil {
				r.Zone.Config.ResourceGroup = types.StringValue(*resp.Zone.Config.ResourceGroup)
			} else {
				r.Zone.Config.ResourceGroup = types.StringNull()
			}
			if resp.Zone.Config.ResourcePool != nil {
				r.Zone.Config.ResourcePool = types.StringValue(*resp.Zone.Config.ResourcePool)
			} else {
				r.Zone.Config.ResourcePool = types.StringNull()
			}
			if resp.Zone.Config.ResourcePoolID != nil {
				r.Zone.Config.ResourcePoolID = types.StringValue(*resp.Zone.Config.ResourcePoolID)
			} else {
				r.Zone.Config.ResourcePoolID = types.StringNull()
			}
			if resp.Zone.Config.RPCMode != nil {
				r.Zone.Config.RPCMode = types.StringValue(*resp.Zone.Config.RPCMode)
			} else {
				r.Zone.Config.RPCMode = types.StringNull()
			}
			if resp.Zone.Config.SecretKey != nil {
				r.Zone.Config.SecretKey = types.StringValue(*resp.Zone.Config.SecretKey)
			} else {
				r.Zone.Config.SecretKey = types.StringNull()
			}
			if resp.Zone.Config.SecretKeyHash != nil {
				r.Zone.Config.SecretKeyHash = types.StringValue(*resp.Zone.Config.SecretKeyHash)
			} else {
				r.Zone.Config.SecretKeyHash = types.StringNull()
			}
			if resp.Zone.Config.SecurityMode != nil {
				r.Zone.Config.SecurityMode = types.StringValue(*resp.Zone.Config.SecurityMode)
			} else {
				r.Zone.Config.SecurityMode = types.StringNull()
			}
			if resp.Zone.Config.SecurityServer != nil {
				r.Zone.Config.SecurityServer = types.StringValue(*resp.Zone.Config.SecurityServer)
			} else {
				r.Zone.Config.SecurityServer = types.StringNull()
			}
			if resp.Zone.Config.ServiceRegistryID != nil {
				r.Zone.Config.ServiceRegistryID = types.StringValue(*resp.Zone.Config.ServiceRegistryID)
			} else {
				r.Zone.Config.ServiceRegistryID = types.StringNull()
			}
			if resp.Zone.Config.StsAssumeRole != nil {
				r.Zone.Config.StsAssumeRole = types.StringValue(*resp.Zone.Config.StsAssumeRole)
			} else {
				r.Zone.Config.StsAssumeRole = types.StringNull()
			}
			if resp.Zone.Config.SubscriberID != nil {
				r.Zone.Config.SubscriberID = types.StringValue(*resp.Zone.Config.SubscriberID)
			} else {
				r.Zone.Config.SubscriberID = types.StringNull()
			}
			if resp.Zone.Config.TenantID != nil {
				r.Zone.Config.TenantID = types.StringValue(*resp.Zone.Config.TenantID)
			} else {
				r.Zone.Config.TenantID = types.StringNull()
			}
			if resp.Zone.Config.Username != nil {
				r.Zone.Config.Username = types.StringValue(*resp.Zone.Config.Username)
			} else {
				r.Zone.Config.Username = types.StringNull()
			}
			if resp.Zone.Config.Vpc != nil {
				r.Zone.Config.Vpc = types.StringValue(*resp.Zone.Config.Vpc)
			} else {
				r.Zone.Config.Vpc = types.StringNull()
			}
		}
		if resp.Zone.ConsoleKeymap != nil {
			r.Zone.ConsoleKeymap = types.StringValue(*resp.Zone.ConsoleKeymap)
		} else {
			r.Zone.ConsoleKeymap = types.StringNull()
		}
		if resp.Zone.ContainerMode != nil {
			r.Zone.ContainerMode = types.StringValue(*resp.Zone.ContainerMode)
		} else {
			r.Zone.ContainerMode = types.StringNull()
		}
		if resp.Zone.CostLastSync != nil {
			r.Zone.CostLastSync = types.StringValue(resp.Zone.CostLastSync.Format(time.RFC3339))
		} else {
			r.Zone.CostLastSync = types.StringNull()
		}
		if resp.Zone.CostLastSyncDuration != nil {
			r.Zone.CostLastSyncDuration = types.Int64Value(*resp.Zone.CostLastSyncDuration)
		} else {
			r.Zone.CostLastSyncDuration = types.Int64Null()
		}
		if resp.Zone.CostStatus != nil {
			r.Zone.CostStatus = types.StringValue(*resp.Zone.CostStatus)
		} else {
			r.Zone.CostStatus = types.StringNull()
		}
		if resp.Zone.CostStatusDate != nil {
			r.Zone.CostStatusDate = types.StringValue(resp.Zone.CostStatusDate.Format(time.RFC3339))
		} else {
			r.Zone.CostStatusDate = types.StringNull()
		}
		if resp.Zone.CostStatusMessage != nil {
			r.Zone.CostStatusMessage = types.StringValue(*resp.Zone.CostStatusMessage)
		} else {
			r.Zone.CostStatusMessage = types.StringNull()
		}
		if resp.Zone.CostingMode != nil {
			r.Zone.CostingMode = types.StringValue(*resp.Zone.CostingMode)
		} else {
			r.Zone.CostingMode = types.StringNull()
		}
		if resp.Zone.Credential == nil {
			r.Zone.Credential = nil
		} else {
			r.Zone.Credential = &ZoneCredential{}
			if resp.Zone.Credential.ZoneCredential1 != nil {
				r.Zone.Credential.ZoneCredential1 = &ZoneCredential1{}
				if resp.Zone.Credential.ZoneCredential1.Type != nil {
					r.Zone.Credential.ZoneCredential1.Type = types.StringValue(*resp.Zone.Credential.ZoneCredential1.Type)
				} else {
					r.Zone.Credential.ZoneCredential1.Type = types.StringNull()
				}
			}
			if resp.Zone.Credential.ZoneCredential2 != nil {
				r.Zone.Credential.ZoneCredential2 = &ZoneCredential2{}
				if resp.Zone.Credential.ZoneCredential2.ID != nil {
					r.Zone.Credential.ZoneCredential2.ID = types.Int64Value(*resp.Zone.Credential.ZoneCredential2.ID)
				} else {
					r.Zone.Credential.ZoneCredential2.ID = types.Int64Null()
				}
				if resp.Zone.Credential.ZoneCredential2.Name != nil {
					r.Zone.Credential.ZoneCredential2.Name = types.StringValue(*resp.Zone.Credential.ZoneCredential2.Name)
				} else {
					r.Zone.Credential.ZoneCredential2.Name = types.StringNull()
				}
				if resp.Zone.Credential.ZoneCredential2.Type != nil {
					r.Zone.Credential.ZoneCredential2.Type = types.StringValue(*resp.Zone.Credential.ZoneCredential2.Type)
				} else {
					r.Zone.Credential.ZoneCredential2.Type = types.StringNull()
				}
			}
		}
		if resp.Zone.DarkImagePath != nil {
			r.Zone.DarkImagePath = types.StringValue(*resp.Zone.DarkImagePath)
		} else {
			r.Zone.DarkImagePath = types.StringNull()
		}
		if resp.Zone.DateCreated != nil {
			r.Zone.DateCreated = types.StringValue(resp.Zone.DateCreated.Format(time.RFC3339))
		} else {
			r.Zone.DateCreated = types.StringNull()
		}
		if resp.Zone.DomainName != nil {
			r.Zone.DomainName = types.StringValue(*resp.Zone.DomainName)
		} else {
			r.Zone.DomainName = types.StringNull()
		}
		if resp.Zone.Enabled != nil {
			r.Zone.Enabled = types.BoolValue(*resp.Zone.Enabled)
		} else {
			r.Zone.Enabled = types.BoolNull()
		}
		if resp.Zone.ExternalID != nil {
			r.Zone.ExternalID = types.StringValue(*resp.Zone.ExternalID)
		} else {
			r.Zone.ExternalID = types.StringNull()
		}
		r.Zone.Groups = nil
		for _, groupsItem := range resp.Zone.Groups {
			var groups1 ZoneGroups
			if groupsItem.AccountID != nil {
				groups1.AccountID = types.Int64Value(*groupsItem.AccountID)
			} else {
				groups1.AccountID = types.Int64Null()
			}
			if groupsItem.ID != nil {
				groups1.ID = types.Int64Value(*groupsItem.ID)
			} else {
				groups1.ID = types.Int64Null()
			}
			if groupsItem.Name != nil {
				groups1.Name = types.StringValue(*groupsItem.Name)
			} else {
				groups1.Name = types.StringNull()
			}
			r.Zone.Groups = append(r.Zone.Groups, groups1)
		}
		if resp.Zone.GuidanceMode != nil {
			r.Zone.GuidanceMode = types.StringValue(*resp.Zone.GuidanceMode)
		} else {
			r.Zone.GuidanceMode = types.StringNull()
		}
		if resp.Zone.ID != nil {
			r.Zone.ID = types.Int64Value(*resp.Zone.ID)
		} else {
			r.Zone.ID = types.Int64Null()
		}
		if resp.Zone.ImagePath != nil {
			r.Zone.ImagePath = types.StringValue(*resp.Zone.ImagePath)
		} else {
			r.Zone.ImagePath = types.StringNull()
		}
		if resp.Zone.InventoryLevel != nil {
			r.Zone.InventoryLevel = types.StringValue(*resp.Zone.InventoryLevel)
		} else {
			r.Zone.InventoryLevel = types.StringNull()
		}
		if resp.Zone.LastSync != nil {
			r.Zone.LastSync = types.StringValue(resp.Zone.LastSync.Format(time.RFC3339))
		} else {
			r.Zone.LastSync = types.StringNull()
		}
		if resp.Zone.LastSyncDuration != nil {
			r.Zone.LastSyncDuration = types.Int64Value(*resp.Zone.LastSyncDuration)
		} else {
			r.Zone.LastSyncDuration = types.Int64Null()
		}
		if resp.Zone.LastUpdated != nil {
			r.Zone.LastUpdated = types.StringValue(resp.Zone.LastUpdated.Format(time.RFC3339))
		} else {
			r.Zone.LastUpdated = types.StringNull()
		}
		if resp.Zone.Location != nil {
			r.Zone.Location = types.StringValue(*resp.Zone.Location)
		} else {
			r.Zone.Location = types.StringNull()
		}
		if resp.Zone.Name != nil {
			r.Zone.Name = types.StringValue(*resp.Zone.Name)
		} else {
			r.Zone.Name = types.StringNull()
		}
		if r.Zone.NetworkDomain == nil {
			r.Zone.NetworkDomain = &ZoneAccount{}
		}
		if resp.Zone.NetworkDomain == nil {
			r.Zone.NetworkDomain = nil
		} else {
			r.Zone.NetworkDomain = &ZoneAccount{}
			if resp.Zone.NetworkDomain.ID != nil {
				r.Zone.NetworkDomain.ID = types.Int64Value(*resp.Zone.NetworkDomain.ID)
			} else {
				r.Zone.NetworkDomain.ID = types.Int64Null()
			}
			if resp.Zone.NetworkDomain.Name != nil {
				r.Zone.NetworkDomain.Name = types.StringValue(*resp.Zone.NetworkDomain.Name)
			} else {
				r.Zone.NetworkDomain.Name = types.StringNull()
			}
		}
		if r.Zone.NetworkServer == nil {
			r.Zone.NetworkServer = &ZoneAccount{}
		}
		if resp.Zone.NetworkServer == nil {
			r.Zone.NetworkServer = nil
		} else {
			r.Zone.NetworkServer = &ZoneAccount{}
			if resp.Zone.NetworkServer.ID != nil {
				r.Zone.NetworkServer.ID = types.Int64Value(*resp.Zone.NetworkServer.ID)
			} else {
				r.Zone.NetworkServer.ID = types.Int64Null()
			}
			if resp.Zone.NetworkServer.Name != nil {
				r.Zone.NetworkServer.Name = types.StringValue(*resp.Zone.NetworkServer.Name)
			} else {
				r.Zone.NetworkServer.Name = types.StringNull()
			}
		}
		if resp.Zone.NextRunDate != nil {
			r.Zone.NextRunDate = types.StringValue(resp.Zone.NextRunDate.Format(time.RFC3339))
		} else {
			r.Zone.NextRunDate = types.StringNull()
		}
		if r.Zone.Owner == nil {
			r.Zone.Owner = &ZoneAccount{}
		}
		if resp.Zone.Owner == nil {
			r.Zone.Owner = nil
		} else {
			r.Zone.Owner = &ZoneAccount{}
			if resp.Zone.Owner.ID != nil {
				r.Zone.Owner.ID = types.Int64Value(*resp.Zone.Owner.ID)
			} else {
				r.Zone.Owner.ID = types.Int64Null()
			}
			if resp.Zone.Owner.Name != nil {
				r.Zone.Owner.Name = types.StringValue(*resp.Zone.Owner.Name)
			} else {
				r.Zone.Owner.Name = types.StringNull()
			}
		}
		if resp.Zone.ProvisioningProxy != nil {
			r.Zone.ProvisioningProxy = types.StringValue(*resp.Zone.ProvisioningProxy)
		} else {
			r.Zone.ProvisioningProxy = types.StringNull()
		}
		if resp.Zone.RegionCode != nil {
			r.Zone.RegionCode = types.StringValue(*resp.Zone.RegionCode)
		} else {
			r.Zone.RegionCode = types.StringNull()
		}
		if resp.Zone.ScalePriority != nil {
			r.Zone.ScalePriority = types.Int64Value(*resp.Zone.ScalePriority)
		} else {
			r.Zone.ScalePriority = types.Int64Null()
		}
		if resp.Zone.SecurityMode != nil {
			r.Zone.SecurityMode = types.StringValue(*resp.Zone.SecurityMode)
		} else {
			r.Zone.SecurityMode = types.StringNull()
		}
		if r.Zone.SecurityServer == nil {
			r.Zone.SecurityServer = &ZoneAccount{}
		}
		if resp.Zone.SecurityServer == nil {
			r.Zone.SecurityServer = nil
		} else {
			r.Zone.SecurityServer = &ZoneAccount{}
			if resp.Zone.SecurityServer.ID != nil {
				r.Zone.SecurityServer.ID = types.Int64Value(*resp.Zone.SecurityServer.ID)
			} else {
				r.Zone.SecurityServer.ID = types.Int64Null()
			}
			if resp.Zone.SecurityServer.Name != nil {
				r.Zone.SecurityServer.Name = types.StringValue(*resp.Zone.SecurityServer.Name)
			} else {
				r.Zone.SecurityServer.Name = types.StringNull()
			}
		}
		if resp.Zone.ServerCount != nil {
			r.Zone.ServerCount = types.Int64Value(*resp.Zone.ServerCount)
		} else {
			r.Zone.ServerCount = types.Int64Null()
		}
		if resp.Zone.ServiceVersion != nil {
			r.Zone.ServiceVersion = types.StringValue(*resp.Zone.ServiceVersion)
		} else {
			r.Zone.ServiceVersion = types.StringNull()
		}
		if r.Zone.Stats == nil {
			r.Zone.Stats = &ZoneStats{}
		}
		if resp.Zone.Stats == nil {
			r.Zone.Stats = nil
		} else {
			r.Zone.Stats = &ZoneStats{}
			if r.Zone.Stats.ServerCounts == nil {
				r.Zone.Stats.ServerCounts = &ZoneStatsServerCounts{}
			}
			if resp.Zone.Stats.ServerCounts == nil {
				r.Zone.Stats.ServerCounts = nil
			} else {
				r.Zone.Stats.ServerCounts = &ZoneStatsServerCounts{}
				if resp.Zone.Stats.ServerCounts.All != nil {
					r.Zone.Stats.ServerCounts.All = types.Int64Value(*resp.Zone.Stats.ServerCounts.All)
				} else {
					r.Zone.Stats.ServerCounts.All = types.Int64Null()
				}
				if resp.Zone.Stats.ServerCounts.Baremetal != nil {
					r.Zone.Stats.ServerCounts.Baremetal = types.Int64Value(*resp.Zone.Stats.ServerCounts.Baremetal)
				} else {
					r.Zone.Stats.ServerCounts.Baremetal = types.Int64Null()
				}
				if resp.Zone.Stats.ServerCounts.ContainerHost != nil {
					r.Zone.Stats.ServerCounts.ContainerHost = types.Int64Value(*resp.Zone.Stats.ServerCounts.ContainerHost)
				} else {
					r.Zone.Stats.ServerCounts.ContainerHost = types.Int64Null()
				}
				if resp.Zone.Stats.ServerCounts.Host != nil {
					r.Zone.Stats.ServerCounts.Host = types.Int64Value(*resp.Zone.Stats.ServerCounts.Host)
				} else {
					r.Zone.Stats.ServerCounts.Host = types.Int64Null()
				}
				if resp.Zone.Stats.ServerCounts.Hypervisor != nil {
					r.Zone.Stats.ServerCounts.Hypervisor = types.Int64Value(*resp.Zone.Stats.ServerCounts.Hypervisor)
				} else {
					r.Zone.Stats.ServerCounts.Hypervisor = types.Int64Null()
				}
				if resp.Zone.Stats.ServerCounts.Unmanaged != nil {
					r.Zone.Stats.ServerCounts.Unmanaged = types.Int64Value(*resp.Zone.Stats.ServerCounts.Unmanaged)
				} else {
					r.Zone.Stats.ServerCounts.Unmanaged = types.Int64Null()
				}
				if resp.Zone.Stats.ServerCounts.VM != nil {
					r.Zone.Stats.ServerCounts.VM = types.Int64Value(*resp.Zone.Stats.ServerCounts.VM)
				} else {
					r.Zone.Stats.ServerCounts.VM = types.Int64Null()
				}
			}
		}
		if resp.Zone.Status != nil {
			r.Zone.Status = types.StringValue(*resp.Zone.Status)
		} else {
			r.Zone.Status = types.StringNull()
		}
		if resp.Zone.StatusDate != nil {
			r.Zone.StatusDate = types.StringValue(resp.Zone.StatusDate.Format(time.RFC3339))
		} else {
			r.Zone.StatusDate = types.StringNull()
		}
		if resp.Zone.StatusMessage != nil {
			r.Zone.StatusMessage = types.StringValue(*resp.Zone.StatusMessage)
		} else {
			r.Zone.StatusMessage = types.StringNull()
		}
		if resp.Zone.StorageMode != nil {
			r.Zone.StorageMode = types.StringValue(*resp.Zone.StorageMode)
		} else {
			r.Zone.StorageMode = types.StringNull()
		}
		if resp.Zone.Timezone != nil {
			r.Zone.Timezone = types.StringValue(*resp.Zone.Timezone)
		} else {
			r.Zone.Timezone = types.StringNull()
		}
		if resp.Zone.UserDataLinux != nil {
			r.Zone.UserDataLinux = types.StringValue(*resp.Zone.UserDataLinux)
		} else {
			r.Zone.UserDataLinux = types.StringNull()
		}
		if resp.Zone.UserDataWindows != nil {
			r.Zone.UserDataWindows = types.StringValue(*resp.Zone.UserDataWindows)
		} else {
			r.Zone.UserDataWindows = types.StringNull()
		}
		if resp.Zone.UUID != nil {
			r.Zone.UUID = types.StringValue(*resp.Zone.UUID)
		} else {
			r.Zone.UUID = types.StringNull()
		}
		if resp.Zone.Visibility != nil {
			r.Zone.Visibility = types.StringValue(*resp.Zone.Visibility)
		} else {
			r.Zone.Visibility = types.StringNull()
		}
		if r.Zone.ZoneType == nil {
			r.Zone.ZoneType = &ZoneZoneType{}
		}
		if resp.Zone.ZoneType == nil {
			r.Zone.ZoneType = nil
		} else {
			r.Zone.ZoneType = &ZoneZoneType{}
			if resp.Zone.ZoneType.Code != nil {
				r.Zone.ZoneType.Code = types.StringValue(*resp.Zone.ZoneType.Code)
			} else {
				r.Zone.ZoneType.Code = types.StringNull()
			}
			if resp.Zone.ZoneType.ID != nil {
				r.Zone.ZoneType.ID = types.Int64Value(*resp.Zone.ZoneType.ID)
			} else {
				r.Zone.ZoneType.ID = types.Int64Null()
			}
			if resp.Zone.ZoneType.Name != nil {
				r.Zone.ZoneType.Name = types.StringValue(*resp.Zone.ZoneType.Name)
			} else {
				r.Zone.ZoneType.Name = types.StringNull()
			}
		}
		if resp.Zone.ZoneTypeID != nil {
			r.Zone.ZoneTypeID = types.Int64Value(*resp.Zone.ZoneTypeID)
		} else {
			r.Zone.ZoneTypeID = types.Int64Null()
		}
	}
}
