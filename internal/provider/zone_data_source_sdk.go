// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"MyTest/internal/sdk/pkg/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"time"
)

func (r *ZoneDataSourceModel) RefreshFromGetResponse(resp *shared.Zone) {
	if r.Account == nil {
		r.Account = &ZoneAccount{}
	}
	if resp.Account == nil {
		r.Account = nil
	} else {
		r.Account = &ZoneAccount{}
		if resp.Account.ID != nil {
			r.Account.ID = types.Int64Value(*resp.Account.ID)
		} else {
			r.Account.ID = types.Int64Null()
		}
		if resp.Account.Name != nil {
			r.Account.Name = types.StringValue(*resp.Account.Name)
		} else {
			r.Account.Name = types.StringNull()
		}
	}
	if resp.AccountID != nil {
		r.AccountID = types.Int64Value(*resp.AccountID)
	} else {
		r.AccountID = types.Int64Null()
	}
	if resp.AgentMode != nil {
		r.AgentMode = types.StringValue(*resp.AgentMode)
	} else {
		r.AgentMode = types.StringNull()
	}
	if resp.APIProxy != nil {
		r.APIProxy = types.StringValue(*resp.APIProxy)
	} else {
		r.APIProxy = types.StringNull()
	}
	if resp.AutoRecoverPowerState != nil {
		r.AutoRecoverPowerState = types.BoolValue(*resp.AutoRecoverPowerState)
	} else {
		r.AutoRecoverPowerState = types.BoolNull()
	}
	if resp.Code != nil {
		r.Code = types.StringValue(*resp.Code)
	} else {
		r.Code = types.StringNull()
	}
	if resp.Config == nil {
		r.Config = nil
	} else {
		r.Config = &ZoneConfig{}
		if resp.Config.ZoneAwsConfig != nil {
			r.Config.ZoneAwsConfig = &ZoneAwsConfig{}
			if resp.Config.ZoneAwsConfig.UseHostCredentials != nil {
				r.Config.ZoneAwsConfig.UseHostCredentials = types.StringValue(*resp.Config.ZoneAwsConfig.UseHostCredentials)
			} else {
				r.Config.ZoneAwsConfig.UseHostCredentials = types.StringNull()
			}
			if resp.Config.ZoneAwsConfig.AccessKey != nil {
				r.Config.ZoneAwsConfig.AccessKey = types.StringValue(*resp.Config.ZoneAwsConfig.AccessKey)
			} else {
				r.Config.ZoneAwsConfig.AccessKey = types.StringNull()
			}
			if resp.Config.ZoneAwsConfig.ApplianceURL != nil {
				r.Config.ZoneAwsConfig.ApplianceURL = types.StringValue(*resp.Config.ZoneAwsConfig.ApplianceURL)
			} else {
				r.Config.ZoneAwsConfig.ApplianceURL = types.StringNull()
			}
			if resp.Config.ZoneAwsConfig.BackupMode != nil {
				r.Config.ZoneAwsConfig.BackupMode = types.StringValue(*resp.Config.ZoneAwsConfig.BackupMode)
			} else {
				r.Config.ZoneAwsConfig.BackupMode = types.StringNull()
			}
			if resp.Config.ZoneAwsConfig.CertificateProvider != nil {
				r.Config.ZoneAwsConfig.CertificateProvider = types.StringValue(*resp.Config.ZoneAwsConfig.CertificateProvider)
			} else {
				r.Config.ZoneAwsConfig.CertificateProvider = types.StringNull()
			}
			if resp.Config.ZoneAwsConfig.ConfigCmdbDiscovery != nil {
				r.Config.ZoneAwsConfig.ConfigCmdbDiscovery = types.BoolValue(*resp.Config.ZoneAwsConfig.ConfigCmdbDiscovery)
			} else {
				r.Config.ZoneAwsConfig.ConfigCmdbDiscovery = types.BoolNull()
			}
			if resp.Config.ZoneAwsConfig.ConfigManagementID != nil {
				r.Config.ZoneAwsConfig.ConfigManagementID = types.StringValue(*resp.Config.ZoneAwsConfig.ConfigManagementID)
			} else {
				r.Config.ZoneAwsConfig.ConfigManagementID = types.StringNull()
			}
			if resp.Config.ZoneAwsConfig.CostingAccessKey != nil {
				r.Config.ZoneAwsConfig.CostingAccessKey = types.StringValue(*resp.Config.ZoneAwsConfig.CostingAccessKey)
			} else {
				r.Config.ZoneAwsConfig.CostingAccessKey = types.StringNull()
			}
			if resp.Config.ZoneAwsConfig.CostingBucket != nil {
				r.Config.ZoneAwsConfig.CostingBucket = types.StringValue(*resp.Config.ZoneAwsConfig.CostingBucket)
			} else {
				r.Config.ZoneAwsConfig.CostingBucket = types.StringNull()
			}
			if resp.Config.ZoneAwsConfig.CostingBucketName != nil {
				r.Config.ZoneAwsConfig.CostingBucketName = types.StringValue(*resp.Config.ZoneAwsConfig.CostingBucketName)
			} else {
				r.Config.ZoneAwsConfig.CostingBucketName = types.StringNull()
			}
			if resp.Config.ZoneAwsConfig.CostingFolder != nil {
				r.Config.ZoneAwsConfig.CostingFolder = types.StringValue(*resp.Config.ZoneAwsConfig.CostingFolder)
			} else {
				r.Config.ZoneAwsConfig.CostingFolder = types.StringNull()
			}
			if resp.Config.ZoneAwsConfig.CostingRegion != nil {
				r.Config.ZoneAwsConfig.CostingRegion = types.StringValue(*resp.Config.ZoneAwsConfig.CostingRegion)
			} else {
				r.Config.ZoneAwsConfig.CostingRegion = types.StringNull()
			}
			if resp.Config.ZoneAwsConfig.CostingReport != nil {
				r.Config.ZoneAwsConfig.CostingReport = types.StringValue(*resp.Config.ZoneAwsConfig.CostingReport)
			} else {
				r.Config.ZoneAwsConfig.CostingReport = types.StringNull()
			}
			if resp.Config.ZoneAwsConfig.CostingReportName != nil {
				r.Config.ZoneAwsConfig.CostingReportName = types.StringValue(*resp.Config.ZoneAwsConfig.CostingReportName)
			} else {
				r.Config.ZoneAwsConfig.CostingReportName = types.StringNull()
			}
			if resp.Config.ZoneAwsConfig.CostingSecretKey != nil {
				r.Config.ZoneAwsConfig.CostingSecretKey = types.StringValue(*resp.Config.ZoneAwsConfig.CostingSecretKey)
			} else {
				r.Config.ZoneAwsConfig.CostingSecretKey = types.StringNull()
			}
			if resp.Config.ZoneAwsConfig.CostingSecretKeyHash != nil {
				r.Config.ZoneAwsConfig.CostingSecretKeyHash = types.StringValue(*resp.Config.ZoneAwsConfig.CostingSecretKeyHash)
			} else {
				r.Config.ZoneAwsConfig.CostingSecretKeyHash = types.StringNull()
			}
			if resp.Config.ZoneAwsConfig.DatacenterName != nil {
				r.Config.ZoneAwsConfig.DatacenterName = types.StringValue(*resp.Config.ZoneAwsConfig.DatacenterName)
			} else {
				r.Config.ZoneAwsConfig.DatacenterName = types.StringNull()
			}
			if resp.Config.ZoneAwsConfig.DNSIntegrationID != nil {
				r.Config.ZoneAwsConfig.DNSIntegrationID = types.StringValue(*resp.Config.ZoneAwsConfig.DNSIntegrationID)
			} else {
				r.Config.ZoneAwsConfig.DNSIntegrationID = types.StringNull()
			}
			if resp.Config.ZoneAwsConfig.EbsEncryption != nil {
				r.Config.ZoneAwsConfig.EbsEncryption = types.StringValue(*resp.Config.ZoneAwsConfig.EbsEncryption)
			} else {
				r.Config.ZoneAwsConfig.EbsEncryption = types.StringNull()
			}
			if resp.Config.ZoneAwsConfig.Endpoint != nil {
				r.Config.ZoneAwsConfig.Endpoint = types.StringValue(*resp.Config.ZoneAwsConfig.Endpoint)
			} else {
				r.Config.ZoneAwsConfig.Endpoint = types.StringNull()
			}
			if resp.Config.ZoneAwsConfig.ImageStoreID != nil {
				r.Config.ZoneAwsConfig.ImageStoreID = types.StringValue(*resp.Config.ZoneAwsConfig.ImageStoreID)
			} else {
				r.Config.ZoneAwsConfig.ImageStoreID = types.StringNull()
			}
			if resp.Config.ZoneAwsConfig.IsVpc != nil {
				r.Config.ZoneAwsConfig.IsVpc = types.StringValue(*resp.Config.ZoneAwsConfig.IsVpc)
			} else {
				r.Config.ZoneAwsConfig.IsVpc = types.StringNull()
			}
			if r.Config.ZoneAwsConfig.NetworkServer == nil {
				r.Config.ZoneAwsConfig.NetworkServer = &ZoneAwsConfigNetworkServer{}
			}
			if resp.Config.ZoneAwsConfig.NetworkServer == nil {
				r.Config.ZoneAwsConfig.NetworkServer = nil
			} else {
				r.Config.ZoneAwsConfig.NetworkServer = &ZoneAwsConfigNetworkServer{}
				if resp.Config.ZoneAwsConfig.NetworkServer.ID != nil {
					r.Config.ZoneAwsConfig.NetworkServer.ID = types.StringValue(*resp.Config.ZoneAwsConfig.NetworkServer.ID)
				} else {
					r.Config.ZoneAwsConfig.NetworkServer.ID = types.StringNull()
				}
			}
			if resp.Config.ZoneAwsConfig.NetworkServerID != nil {
				r.Config.ZoneAwsConfig.NetworkServerID = types.StringValue(*resp.Config.ZoneAwsConfig.NetworkServerID)
			} else {
				r.Config.ZoneAwsConfig.NetworkServerID = types.StringNull()
			}
			if resp.Config.ZoneAwsConfig.ReplicationMode != nil {
				r.Config.ZoneAwsConfig.ReplicationMode = types.StringValue(*resp.Config.ZoneAwsConfig.ReplicationMode)
			} else {
				r.Config.ZoneAwsConfig.ReplicationMode = types.StringNull()
			}
			if resp.Config.ZoneAwsConfig.SecretKey != nil {
				r.Config.ZoneAwsConfig.SecretKey = types.StringValue(*resp.Config.ZoneAwsConfig.SecretKey)
			} else {
				r.Config.ZoneAwsConfig.SecretKey = types.StringNull()
			}
			if resp.Config.ZoneAwsConfig.SecretKeyHash != nil {
				r.Config.ZoneAwsConfig.SecretKeyHash = types.StringValue(*resp.Config.ZoneAwsConfig.SecretKeyHash)
			} else {
				r.Config.ZoneAwsConfig.SecretKeyHash = types.StringNull()
			}
			if resp.Config.ZoneAwsConfig.SecurityServer != nil {
				r.Config.ZoneAwsConfig.SecurityServer = types.StringValue(*resp.Config.ZoneAwsConfig.SecurityServer)
			} else {
				r.Config.ZoneAwsConfig.SecurityServer = types.StringNull()
			}
			if resp.Config.ZoneAwsConfig.ServiceRegistryID != nil {
				r.Config.ZoneAwsConfig.ServiceRegistryID = types.StringValue(*resp.Config.ZoneAwsConfig.ServiceRegistryID)
			} else {
				r.Config.ZoneAwsConfig.ServiceRegistryID = types.StringNull()
			}
			if resp.Config.ZoneAwsConfig.StsAssumeRole != nil {
				r.Config.ZoneAwsConfig.StsAssumeRole = types.StringValue(*resp.Config.ZoneAwsConfig.StsAssumeRole)
			} else {
				r.Config.ZoneAwsConfig.StsAssumeRole = types.StringNull()
			}
			if resp.Config.ZoneAwsConfig.Vpc != nil {
				r.Config.ZoneAwsConfig.Vpc = types.StringValue(*resp.Config.ZoneAwsConfig.Vpc)
			} else {
				r.Config.ZoneAwsConfig.Vpc = types.StringNull()
			}
		}
		if resp.Config.ZoneAzureConfig != nil {
			r.Config.ZoneAzureConfig = &ZoneAzureConfig{}
			if resp.Config.ZoneAzureConfig.AccountType != nil {
				r.Config.ZoneAzureConfig.AccountType = types.StringValue(*resp.Config.ZoneAzureConfig.AccountType)
			} else {
				r.Config.ZoneAzureConfig.AccountType = types.StringNull()
			}
			if resp.Config.ZoneAzureConfig.ApplianceURL != nil {
				r.Config.ZoneAzureConfig.ApplianceURL = types.StringValue(*resp.Config.ZoneAzureConfig.ApplianceURL)
			} else {
				r.Config.ZoneAzureConfig.ApplianceURL = types.StringNull()
			}
			if resp.Config.ZoneAzureConfig.AzureCostingMode != nil {
				r.Config.ZoneAzureConfig.AzureCostingMode = types.StringValue(*resp.Config.ZoneAzureConfig.AzureCostingMode)
			} else {
				r.Config.ZoneAzureConfig.AzureCostingMode = types.StringNull()
			}
			if resp.Config.ZoneAzureConfig.BackupMode != nil {
				r.Config.ZoneAzureConfig.BackupMode = types.StringValue(*resp.Config.ZoneAzureConfig.BackupMode)
			} else {
				r.Config.ZoneAzureConfig.BackupMode = types.StringNull()
			}
			if resp.Config.ZoneAzureConfig.CertificateProvider != nil {
				r.Config.ZoneAzureConfig.CertificateProvider = types.StringValue(*resp.Config.ZoneAzureConfig.CertificateProvider)
			} else {
				r.Config.ZoneAzureConfig.CertificateProvider = types.StringNull()
			}
			if resp.Config.ZoneAzureConfig.ClientID != nil {
				r.Config.ZoneAzureConfig.ClientID = types.StringValue(*resp.Config.ZoneAzureConfig.ClientID)
			} else {
				r.Config.ZoneAzureConfig.ClientID = types.StringNull()
			}
			if resp.Config.ZoneAzureConfig.ClientSecret != nil {
				r.Config.ZoneAzureConfig.ClientSecret = types.StringValue(*resp.Config.ZoneAzureConfig.ClientSecret)
			} else {
				r.Config.ZoneAzureConfig.ClientSecret = types.StringNull()
			}
			if resp.Config.ZoneAzureConfig.ClientSecretHash != nil {
				r.Config.ZoneAzureConfig.ClientSecretHash = types.StringValue(*resp.Config.ZoneAzureConfig.ClientSecretHash)
			} else {
				r.Config.ZoneAzureConfig.ClientSecretHash = types.StringNull()
			}
			if resp.Config.ZoneAzureConfig.CloudType != nil {
				r.Config.ZoneAzureConfig.CloudType = types.StringValue(*resp.Config.ZoneAzureConfig.CloudType)
			} else {
				r.Config.ZoneAzureConfig.CloudType = types.StringNull()
			}
			if resp.Config.ZoneAzureConfig.ConfigCmdbDiscovery != nil {
				r.Config.ZoneAzureConfig.ConfigCmdbDiscovery = types.BoolValue(*resp.Config.ZoneAzureConfig.ConfigCmdbDiscovery)
			} else {
				r.Config.ZoneAzureConfig.ConfigCmdbDiscovery = types.BoolNull()
			}
			if resp.Config.ZoneAzureConfig.ConfigCmdbID != nil {
				r.Config.ZoneAzureConfig.ConfigCmdbID = types.StringValue(*resp.Config.ZoneAzureConfig.ConfigCmdbID)
			} else {
				r.Config.ZoneAzureConfig.ConfigCmdbID = types.StringNull()
			}
			if resp.Config.ZoneAzureConfig.ConfigManagementID != nil {
				r.Config.ZoneAzureConfig.ConfigManagementID = types.StringValue(*resp.Config.ZoneAzureConfig.ConfigManagementID)
			} else {
				r.Config.ZoneAzureConfig.ConfigManagementID = types.StringNull()
			}
			if resp.Config.ZoneAzureConfig.CspClientID != nil {
				r.Config.ZoneAzureConfig.CspClientID = types.StringValue(*resp.Config.ZoneAzureConfig.CspClientID)
			} else {
				r.Config.ZoneAzureConfig.CspClientID = types.StringNull()
			}
			if resp.Config.ZoneAzureConfig.CspClientSecret != nil {
				r.Config.ZoneAzureConfig.CspClientSecret = types.StringValue(*resp.Config.ZoneAzureConfig.CspClientSecret)
			} else {
				r.Config.ZoneAzureConfig.CspClientSecret = types.StringNull()
			}
			if resp.Config.ZoneAzureConfig.CspClientSecretHash != nil {
				r.Config.ZoneAzureConfig.CspClientSecretHash = types.StringValue(*resp.Config.ZoneAzureConfig.CspClientSecretHash)
			} else {
				r.Config.ZoneAzureConfig.CspClientSecretHash = types.StringNull()
			}
			if resp.Config.ZoneAzureConfig.CspCustomer != nil {
				r.Config.ZoneAzureConfig.CspCustomer = types.StringValue(*resp.Config.ZoneAzureConfig.CspCustomer)
			} else {
				r.Config.ZoneAzureConfig.CspCustomer = types.StringNull()
			}
			if resp.Config.ZoneAzureConfig.CspTenantID != nil {
				r.Config.ZoneAzureConfig.CspTenantID = types.StringValue(*resp.Config.ZoneAzureConfig.CspTenantID)
			} else {
				r.Config.ZoneAzureConfig.CspTenantID = types.StringNull()
			}
			if resp.Config.ZoneAzureConfig.DatacenterName != nil {
				r.Config.ZoneAzureConfig.DatacenterName = types.StringValue(*resp.Config.ZoneAzureConfig.DatacenterName)
			} else {
				r.Config.ZoneAzureConfig.DatacenterName = types.StringNull()
			}
			if resp.Config.ZoneAzureConfig.DiskEncryption != nil {
				r.Config.ZoneAzureConfig.DiskEncryption = types.StringValue(*resp.Config.ZoneAzureConfig.DiskEncryption)
			} else {
				r.Config.ZoneAzureConfig.DiskEncryption = types.StringNull()
			}
			if resp.Config.ZoneAzureConfig.DNSIntegrationID != nil {
				r.Config.ZoneAzureConfig.DNSIntegrationID = types.StringValue(*resp.Config.ZoneAzureConfig.DNSIntegrationID)
			} else {
				r.Config.ZoneAzureConfig.DNSIntegrationID = types.StringNull()
			}
			if resp.Config.ZoneAzureConfig.EncryptionSet != nil {
				r.Config.ZoneAzureConfig.EncryptionSet = types.StringValue(*resp.Config.ZoneAzureConfig.EncryptionSet)
			} else {
				r.Config.ZoneAzureConfig.EncryptionSet = types.StringNull()
			}
			if resp.Config.ZoneAzureConfig.ImportExisting != nil {
				r.Config.ZoneAzureConfig.ImportExisting = types.StringValue(*resp.Config.ZoneAzureConfig.ImportExisting)
			} else {
				r.Config.ZoneAzureConfig.ImportExisting = types.StringNull()
			}
			if resp.Config.ZoneAzureConfig.InventoryLevel != nil {
				r.Config.ZoneAzureConfig.InventoryLevel = types.StringValue(*resp.Config.ZoneAzureConfig.InventoryLevel)
			} else {
				r.Config.ZoneAzureConfig.InventoryLevel = types.StringNull()
			}
			if r.Config.ZoneAzureConfig.NetworkServer == nil {
				r.Config.ZoneAzureConfig.NetworkServer = &ZoneAwsConfigNetworkServer{}
			}
			if resp.Config.ZoneAzureConfig.NetworkServer == nil {
				r.Config.ZoneAzureConfig.NetworkServer = nil
			} else {
				r.Config.ZoneAzureConfig.NetworkServer = &ZoneAwsConfigNetworkServer{}
				if resp.Config.ZoneAzureConfig.NetworkServer.ID != nil {
					r.Config.ZoneAzureConfig.NetworkServer.ID = types.StringValue(*resp.Config.ZoneAzureConfig.NetworkServer.ID)
				} else {
					r.Config.ZoneAzureConfig.NetworkServer.ID = types.StringNull()
				}
			}
			if resp.Config.ZoneAzureConfig.NetworkServerID != nil {
				r.Config.ZoneAzureConfig.NetworkServerID = types.StringValue(*resp.Config.ZoneAzureConfig.NetworkServerID)
			} else {
				r.Config.ZoneAzureConfig.NetworkServerID = types.StringNull()
			}
			if resp.Config.ZoneAzureConfig.ReplicationMode != nil {
				r.Config.ZoneAzureConfig.ReplicationMode = types.StringValue(*resp.Config.ZoneAzureConfig.ReplicationMode)
			} else {
				r.Config.ZoneAzureConfig.ReplicationMode = types.StringNull()
			}
			if resp.Config.ZoneAzureConfig.ResourceGroup != nil {
				r.Config.ZoneAzureConfig.ResourceGroup = types.StringValue(*resp.Config.ZoneAzureConfig.ResourceGroup)
			} else {
				r.Config.ZoneAzureConfig.ResourceGroup = types.StringNull()
			}
			if resp.Config.ZoneAzureConfig.RPCMode != nil {
				r.Config.ZoneAzureConfig.RPCMode = types.StringValue(*resp.Config.ZoneAzureConfig.RPCMode)
			} else {
				r.Config.ZoneAzureConfig.RPCMode = types.StringNull()
			}
			if resp.Config.ZoneAzureConfig.SecurityMode != nil {
				r.Config.ZoneAzureConfig.SecurityMode = types.StringValue(*resp.Config.ZoneAzureConfig.SecurityMode)
			} else {
				r.Config.ZoneAzureConfig.SecurityMode = types.StringNull()
			}
			if resp.Config.ZoneAzureConfig.SecurityServer != nil {
				r.Config.ZoneAzureConfig.SecurityServer = types.StringValue(*resp.Config.ZoneAzureConfig.SecurityServer)
			} else {
				r.Config.ZoneAzureConfig.SecurityServer = types.StringNull()
			}
			if resp.Config.ZoneAzureConfig.ServiceRegistryID != nil {
				r.Config.ZoneAzureConfig.ServiceRegistryID = types.StringValue(*resp.Config.ZoneAzureConfig.ServiceRegistryID)
			} else {
				r.Config.ZoneAzureConfig.ServiceRegistryID = types.StringNull()
			}
			if resp.Config.ZoneAzureConfig.SubscriberID != nil {
				r.Config.ZoneAzureConfig.SubscriberID = types.StringValue(*resp.Config.ZoneAzureConfig.SubscriberID)
			} else {
				r.Config.ZoneAzureConfig.SubscriberID = types.StringNull()
			}
			if resp.Config.ZoneAzureConfig.TenantID != nil {
				r.Config.ZoneAzureConfig.TenantID = types.StringValue(*resp.Config.ZoneAzureConfig.TenantID)
			} else {
				r.Config.ZoneAzureConfig.TenantID = types.StringNull()
			}
		}
		if resp.Config.ZoneGcpConfig != nil {
			r.Config.ZoneGcpConfig = &ZoneGcpConfig{}
			if resp.Config.ZoneGcpConfig.ApplianceURL != nil {
				r.Config.ZoneGcpConfig.ApplianceURL = types.StringValue(*resp.Config.ZoneGcpConfig.ApplianceURL)
			} else {
				r.Config.ZoneGcpConfig.ApplianceURL = types.StringNull()
			}
			if resp.Config.ZoneGcpConfig.BackupMode != nil {
				r.Config.ZoneGcpConfig.BackupMode = types.StringValue(*resp.Config.ZoneGcpConfig.BackupMode)
			} else {
				r.Config.ZoneGcpConfig.BackupMode = types.StringNull()
			}
			if resp.Config.ZoneGcpConfig.CertificateProvider != nil {
				r.Config.ZoneGcpConfig.CertificateProvider = types.StringValue(*resp.Config.ZoneGcpConfig.CertificateProvider)
			} else {
				r.Config.ZoneGcpConfig.CertificateProvider = types.StringNull()
			}
			if resp.Config.ZoneGcpConfig.ClientEmail != nil {
				r.Config.ZoneGcpConfig.ClientEmail = types.StringValue(*resp.Config.ZoneGcpConfig.ClientEmail)
			} else {
				r.Config.ZoneGcpConfig.ClientEmail = types.StringNull()
			}
			if resp.Config.ZoneGcpConfig.ConfigManagementID != nil {
				r.Config.ZoneGcpConfig.ConfigManagementID = types.StringValue(*resp.Config.ZoneGcpConfig.ConfigManagementID)
			} else {
				r.Config.ZoneGcpConfig.ConfigManagementID = types.StringNull()
			}
			if resp.Config.ZoneGcpConfig.DatacenterName != nil {
				r.Config.ZoneGcpConfig.DatacenterName = types.StringValue(*resp.Config.ZoneGcpConfig.DatacenterName)
			} else {
				r.Config.ZoneGcpConfig.DatacenterName = types.StringNull()
			}
			if resp.Config.ZoneGcpConfig.DNSIntegrationID != nil {
				r.Config.ZoneGcpConfig.DNSIntegrationID = types.StringValue(*resp.Config.ZoneGcpConfig.DNSIntegrationID)
			} else {
				r.Config.ZoneGcpConfig.DNSIntegrationID = types.StringNull()
			}
			if resp.Config.ZoneGcpConfig.GoogleRegionID != nil {
				r.Config.ZoneGcpConfig.GoogleRegionID = types.StringValue(*resp.Config.ZoneGcpConfig.GoogleRegionID)
			} else {
				r.Config.ZoneGcpConfig.GoogleRegionID = types.StringNull()
			}
			if resp.Config.ZoneGcpConfig.ImportExisting != nil {
				r.Config.ZoneGcpConfig.ImportExisting = types.StringValue(*resp.Config.ZoneGcpConfig.ImportExisting)
			} else {
				r.Config.ZoneGcpConfig.ImportExisting = types.StringNull()
			}
			if r.Config.ZoneGcpConfig.NetworkServer == nil {
				r.Config.ZoneGcpConfig.NetworkServer = &ZoneAwsConfigNetworkServer{}
			}
			if resp.Config.ZoneGcpConfig.NetworkServer == nil {
				r.Config.ZoneGcpConfig.NetworkServer = nil
			} else {
				r.Config.ZoneGcpConfig.NetworkServer = &ZoneAwsConfigNetworkServer{}
				if resp.Config.ZoneGcpConfig.NetworkServer.ID != nil {
					r.Config.ZoneGcpConfig.NetworkServer.ID = types.StringValue(*resp.Config.ZoneGcpConfig.NetworkServer.ID)
				} else {
					r.Config.ZoneGcpConfig.NetworkServer.ID = types.StringNull()
				}
			}
			if resp.Config.ZoneGcpConfig.NetworkServerID != nil {
				r.Config.ZoneGcpConfig.NetworkServerID = types.StringValue(*resp.Config.ZoneGcpConfig.NetworkServerID)
			} else {
				r.Config.ZoneGcpConfig.NetworkServerID = types.StringNull()
			}
			if resp.Config.ZoneGcpConfig.PrivateKey != nil {
				r.Config.ZoneGcpConfig.PrivateKey = types.StringValue(*resp.Config.ZoneGcpConfig.PrivateKey)
			} else {
				r.Config.ZoneGcpConfig.PrivateKey = types.StringNull()
			}
			if resp.Config.ZoneGcpConfig.PrivateKeyHash != nil {
				r.Config.ZoneGcpConfig.PrivateKeyHash = types.StringValue(*resp.Config.ZoneGcpConfig.PrivateKeyHash)
			} else {
				r.Config.ZoneGcpConfig.PrivateKeyHash = types.StringNull()
			}
			if resp.Config.ZoneGcpConfig.ProjectID != nil {
				r.Config.ZoneGcpConfig.ProjectID = types.StringValue(*resp.Config.ZoneGcpConfig.ProjectID)
			} else {
				r.Config.ZoneGcpConfig.ProjectID = types.StringNull()
			}
			if resp.Config.ZoneGcpConfig.ReplicationMode != nil {
				r.Config.ZoneGcpConfig.ReplicationMode = types.StringValue(*resp.Config.ZoneGcpConfig.ReplicationMode)
			} else {
				r.Config.ZoneGcpConfig.ReplicationMode = types.StringNull()
			}
			if resp.Config.ZoneGcpConfig.SecurityServer != nil {
				r.Config.ZoneGcpConfig.SecurityServer = types.StringValue(*resp.Config.ZoneGcpConfig.SecurityServer)
			} else {
				r.Config.ZoneGcpConfig.SecurityServer = types.StringNull()
			}
			if resp.Config.ZoneGcpConfig.ServiceRegistryID != nil {
				r.Config.ZoneGcpConfig.ServiceRegistryID = types.StringValue(*resp.Config.ZoneGcpConfig.ServiceRegistryID)
			} else {
				r.Config.ZoneGcpConfig.ServiceRegistryID = types.StringNull()
			}
		}
		if resp.Config.ZoneVcenterConfig != nil {
			r.Config.ZoneVcenterConfig = &ZoneVcenterConfig{}
			if resp.Config.ZoneVcenterConfig.EnableNetworkTypeSelection != nil {
				r.Config.ZoneVcenterConfig.EnableNetworkTypeSelection = types.StringValue(*resp.Config.ZoneVcenterConfig.EnableNetworkTypeSelection)
			} else {
				r.Config.ZoneVcenterConfig.EnableNetworkTypeSelection = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.APIURL != nil {
				r.Config.ZoneVcenterConfig.APIURL = types.StringValue(*resp.Config.ZoneVcenterConfig.APIURL)
			} else {
				r.Config.ZoneVcenterConfig.APIURL = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.APIVersion != nil {
				r.Config.ZoneVcenterConfig.APIVersion = types.StringValue(*resp.Config.ZoneVcenterConfig.APIVersion)
			} else {
				r.Config.ZoneVcenterConfig.APIVersion = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.ApplianceURL != nil {
				r.Config.ZoneVcenterConfig.ApplianceURL = types.StringValue(*resp.Config.ZoneVcenterConfig.ApplianceURL)
			} else {
				r.Config.ZoneVcenterConfig.ApplianceURL = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.BackupMode != nil {
				r.Config.ZoneVcenterConfig.BackupMode = types.StringValue(*resp.Config.ZoneVcenterConfig.BackupMode)
			} else {
				r.Config.ZoneVcenterConfig.BackupMode = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.CertificateProvider != nil {
				r.Config.ZoneVcenterConfig.CertificateProvider = types.StringValue(*resp.Config.ZoneVcenterConfig.CertificateProvider)
			} else {
				r.Config.ZoneVcenterConfig.CertificateProvider = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.Cluster != nil {
				r.Config.ZoneVcenterConfig.Cluster = types.StringValue(*resp.Config.ZoneVcenterConfig.Cluster)
			} else {
				r.Config.ZoneVcenterConfig.Cluster = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.ConfigCmdbDiscovery != nil {
				r.Config.ZoneVcenterConfig.ConfigCmdbDiscovery = types.BoolValue(*resp.Config.ZoneVcenterConfig.ConfigCmdbDiscovery)
			} else {
				r.Config.ZoneVcenterConfig.ConfigCmdbDiscovery = types.BoolNull()
			}
			if resp.Config.ZoneVcenterConfig.ConfigCmdbID != nil {
				r.Config.ZoneVcenterConfig.ConfigCmdbID = types.StringValue(*resp.Config.ZoneVcenterConfig.ConfigCmdbID)
			} else {
				r.Config.ZoneVcenterConfig.ConfigCmdbID = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.ConfigCmID != nil {
				r.Config.ZoneVcenterConfig.ConfigCmID = types.StringValue(*resp.Config.ZoneVcenterConfig.ConfigCmID)
			} else {
				r.Config.ZoneVcenterConfig.ConfigCmID = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.ConfigManagementID != nil {
				r.Config.ZoneVcenterConfig.ConfigManagementID = types.StringValue(*resp.Config.ZoneVcenterConfig.ConfigManagementID)
			} else {
				r.Config.ZoneVcenterConfig.ConfigManagementID = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.Datacenter != nil {
				r.Config.ZoneVcenterConfig.Datacenter = types.StringValue(*resp.Config.ZoneVcenterConfig.Datacenter)
			} else {
				r.Config.ZoneVcenterConfig.Datacenter = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.DatacenterID != nil {
				r.Config.ZoneVcenterConfig.DatacenterID = types.StringValue(*resp.Config.ZoneVcenterConfig.DatacenterID)
			} else {
				r.Config.ZoneVcenterConfig.DatacenterID = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.DatacenterName != nil {
				r.Config.ZoneVcenterConfig.DatacenterName = types.StringValue(*resp.Config.ZoneVcenterConfig.DatacenterName)
			} else {
				r.Config.ZoneVcenterConfig.DatacenterName = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.DiskStorageType != nil {
				r.Config.ZoneVcenterConfig.DiskStorageType = types.StringValue(*resp.Config.ZoneVcenterConfig.DiskStorageType)
			} else {
				r.Config.ZoneVcenterConfig.DiskStorageType = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.DistributedWorkerID != nil {
				r.Config.ZoneVcenterConfig.DistributedWorkerID = types.StringValue(*resp.Config.ZoneVcenterConfig.DistributedWorkerID)
			} else {
				r.Config.ZoneVcenterConfig.DistributedWorkerID = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.DNSIntegrationID != nil {
				r.Config.ZoneVcenterConfig.DNSIntegrationID = types.StringValue(*resp.Config.ZoneVcenterConfig.DNSIntegrationID)
			} else {
				r.Config.ZoneVcenterConfig.DNSIntegrationID = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.EnableDiskTypeSelection != nil {
				r.Config.ZoneVcenterConfig.EnableDiskTypeSelection = types.StringValue(*resp.Config.ZoneVcenterConfig.EnableDiskTypeSelection)
			} else {
				r.Config.ZoneVcenterConfig.EnableDiskTypeSelection = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.EnableVnc != nil {
				r.Config.ZoneVcenterConfig.EnableVnc = types.StringValue(*resp.Config.ZoneVcenterConfig.EnableVnc)
			} else {
				r.Config.ZoneVcenterConfig.EnableVnc = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.HideHostSelection != nil {
				r.Config.ZoneVcenterConfig.HideHostSelection = types.StringValue(*resp.Config.ZoneVcenterConfig.HideHostSelection)
			} else {
				r.Config.ZoneVcenterConfig.HideHostSelection = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.ImportExisting != nil {
				r.Config.ZoneVcenterConfig.ImportExisting = types.StringValue(*resp.Config.ZoneVcenterConfig.ImportExisting)
			} else {
				r.Config.ZoneVcenterConfig.ImportExisting = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.KubeURL != nil {
				r.Config.ZoneVcenterConfig.KubeURL = types.StringValue(*resp.Config.ZoneVcenterConfig.KubeURL)
			} else {
				r.Config.ZoneVcenterConfig.KubeURL = types.StringNull()
			}
			if r.Config.ZoneVcenterConfig.NetworkServer == nil {
				r.Config.ZoneVcenterConfig.NetworkServer = &ZoneAwsConfigNetworkServer{}
			}
			if resp.Config.ZoneVcenterConfig.NetworkServer == nil {
				r.Config.ZoneVcenterConfig.NetworkServer = nil
			} else {
				r.Config.ZoneVcenterConfig.NetworkServer = &ZoneAwsConfigNetworkServer{}
				if resp.Config.ZoneVcenterConfig.NetworkServer.ID != nil {
					r.Config.ZoneVcenterConfig.NetworkServer.ID = types.StringValue(*resp.Config.ZoneVcenterConfig.NetworkServer.ID)
				} else {
					r.Config.ZoneVcenterConfig.NetworkServer.ID = types.StringNull()
				}
			}
			if resp.Config.ZoneVcenterConfig.NetworkServerID != nil {
				r.Config.ZoneVcenterConfig.NetworkServerID = types.StringValue(*resp.Config.ZoneVcenterConfig.NetworkServerID)
			} else {
				r.Config.ZoneVcenterConfig.NetworkServerID = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.Password != nil {
				r.Config.ZoneVcenterConfig.Password = types.StringValue(*resp.Config.ZoneVcenterConfig.Password)
			} else {
				r.Config.ZoneVcenterConfig.Password = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.PasswordHash != nil {
				r.Config.ZoneVcenterConfig.PasswordHash = types.StringValue(*resp.Config.ZoneVcenterConfig.PasswordHash)
			} else {
				r.Config.ZoneVcenterConfig.PasswordHash = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.ReplicationMode != nil {
				r.Config.ZoneVcenterConfig.ReplicationMode = types.StringValue(*resp.Config.ZoneVcenterConfig.ReplicationMode)
			} else {
				r.Config.ZoneVcenterConfig.ReplicationMode = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.ResourcePool != nil {
				r.Config.ZoneVcenterConfig.ResourcePool = types.StringValue(*resp.Config.ZoneVcenterConfig.ResourcePool)
			} else {
				r.Config.ZoneVcenterConfig.ResourcePool = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.ResourcePoolID != nil {
				r.Config.ZoneVcenterConfig.ResourcePoolID = types.StringValue(*resp.Config.ZoneVcenterConfig.ResourcePoolID)
			} else {
				r.Config.ZoneVcenterConfig.ResourcePoolID = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.RPCMode != nil {
				r.Config.ZoneVcenterConfig.RPCMode = types.StringValue(*resp.Config.ZoneVcenterConfig.RPCMode)
			} else {
				r.Config.ZoneVcenterConfig.RPCMode = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.SecurityMode != nil {
				r.Config.ZoneVcenterConfig.SecurityMode = types.StringValue(*resp.Config.ZoneVcenterConfig.SecurityMode)
			} else {
				r.Config.ZoneVcenterConfig.SecurityMode = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.SecurityServer != nil {
				r.Config.ZoneVcenterConfig.SecurityServer = types.StringValue(*resp.Config.ZoneVcenterConfig.SecurityServer)
			} else {
				r.Config.ZoneVcenterConfig.SecurityServer = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.ServiceRegistryID != nil {
				r.Config.ZoneVcenterConfig.ServiceRegistryID = types.StringValue(*resp.Config.ZoneVcenterConfig.ServiceRegistryID)
			} else {
				r.Config.ZoneVcenterConfig.ServiceRegistryID = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.Username != nil {
				r.Config.ZoneVcenterConfig.Username = types.StringValue(*resp.Config.ZoneVcenterConfig.Username)
			} else {
				r.Config.ZoneVcenterConfig.Username = types.StringNull()
			}
		}
	}
	if resp.ConsoleKeymap != nil {
		r.ConsoleKeymap = types.StringValue(*resp.ConsoleKeymap)
	} else {
		r.ConsoleKeymap = types.StringNull()
	}
	if resp.ContainerMode != nil {
		r.ContainerMode = types.StringValue(*resp.ContainerMode)
	} else {
		r.ContainerMode = types.StringNull()
	}
	if resp.CostingMode != nil {
		r.CostingMode = types.StringValue(*resp.CostingMode)
	} else {
		r.CostingMode = types.StringNull()
	}
	if resp.CostLastSync != nil {
		r.CostLastSync = types.StringValue(resp.CostLastSync.Format(time.RFC3339))
	} else {
		r.CostLastSync = types.StringNull()
	}
	if resp.CostLastSyncDuration != nil {
		r.CostLastSyncDuration = types.Int64Value(*resp.CostLastSyncDuration)
	} else {
		r.CostLastSyncDuration = types.Int64Null()
	}
	if resp.CostStatus != nil {
		r.CostStatus = types.StringValue(*resp.CostStatus)
	} else {
		r.CostStatus = types.StringNull()
	}
	if resp.CostStatusDate != nil {
		r.CostStatusDate = types.StringValue(resp.CostStatusDate.Format(time.RFC3339))
	} else {
		r.CostStatusDate = types.StringNull()
	}
	if resp.CostStatusMessage != nil {
		r.CostStatusMessage = types.StringValue(*resp.CostStatusMessage)
	} else {
		r.CostStatusMessage = types.StringNull()
	}
	if r.Credential == nil {
		r.Credential = &ZoneCredential{}
	}
	if resp.Credential == nil {
		r.Credential = nil
	} else {
		r.Credential = &ZoneCredential{}
		if resp.Credential.ID != nil {
			r.Credential.ID = types.Int64Value(*resp.Credential.ID)
		} else {
			r.Credential.ID = types.Int64Null()
		}
		if resp.Credential.Name != nil {
			r.Credential.Name = types.StringValue(*resp.Credential.Name)
		} else {
			r.Credential.Name = types.StringNull()
		}
		if resp.Credential.Type != nil {
			r.Credential.Type = types.StringValue(*resp.Credential.Type)
		} else {
			r.Credential.Type = types.StringNull()
		}
	}
	if resp.DarkImagePath != nil {
		r.DarkImagePath = types.StringValue(*resp.DarkImagePath)
	} else {
		r.DarkImagePath = types.StringNull()
	}
	if resp.DateCreated != nil {
		r.DateCreated = types.StringValue(resp.DateCreated.Format(time.RFC3339))
	} else {
		r.DateCreated = types.StringNull()
	}
	if resp.DomainName != nil {
		r.DomainName = types.StringValue(*resp.DomainName)
	} else {
		r.DomainName = types.StringNull()
	}
	if resp.Enabled != nil {
		r.Enabled = types.BoolValue(*resp.Enabled)
	} else {
		r.Enabled = types.BoolNull()
	}
	if resp.ExternalID != nil {
		r.ExternalID = types.StringValue(*resp.ExternalID)
	} else {
		r.ExternalID = types.StringNull()
	}
	r.Groups = nil
	for _, groupsItem := range resp.Groups {
		var groups1 ZoneGroups
		if groupsItem.AccountID != nil {
			groups1.AccountID = types.Int64Value(*groupsItem.AccountID)
		} else {
			groups1.AccountID = types.Int64Null()
		}
		if groupsItem.ID != nil {
			groups1.ID = types.Int64Value(*groupsItem.ID)
		} else {
			groups1.ID = types.Int64Null()
		}
		if groupsItem.Name != nil {
			groups1.Name = types.StringValue(*groupsItem.Name)
		} else {
			groups1.Name = types.StringNull()
		}
		r.Groups = append(r.Groups, groups1)
	}
	if resp.GuidanceMode != nil {
		r.GuidanceMode = types.StringValue(*resp.GuidanceMode)
	} else {
		r.GuidanceMode = types.StringNull()
	}
	if resp.ID != nil {
		r.ID = types.Int64Value(*resp.ID)
	} else {
		r.ID = types.Int64Null()
	}
	if resp.ImagePath != nil {
		r.ImagePath = types.StringValue(*resp.ImagePath)
	} else {
		r.ImagePath = types.StringNull()
	}
	if resp.InventoryLevel != nil {
		r.InventoryLevel = types.StringValue(*resp.InventoryLevel)
	} else {
		r.InventoryLevel = types.StringNull()
	}
	if resp.LastSync != nil {
		r.LastSync = types.StringValue(resp.LastSync.Format(time.RFC3339))
	} else {
		r.LastSync = types.StringNull()
	}
	if resp.LastSyncDuration != nil {
		r.LastSyncDuration = types.Int64Value(*resp.LastSyncDuration)
	} else {
		r.LastSyncDuration = types.Int64Null()
	}
	if resp.LastUpdated != nil {
		r.LastUpdated = types.StringValue(resp.LastUpdated.Format(time.RFC3339))
	} else {
		r.LastUpdated = types.StringNull()
	}
	if resp.Location != nil {
		r.Location = types.StringValue(*resp.Location)
	} else {
		r.Location = types.StringNull()
	}
	if resp.Name != nil {
		r.Name = types.StringValue(*resp.Name)
	} else {
		r.Name = types.StringNull()
	}
	if r.NetworkDomain == nil {
		r.NetworkDomain = &ZoneAccount{}
	}
	if resp.NetworkDomain == nil {
		r.NetworkDomain = nil
	} else {
		r.NetworkDomain = &ZoneAccount{}
		if resp.NetworkDomain.ID != nil {
			r.NetworkDomain.ID = types.Int64Value(*resp.NetworkDomain.ID)
		} else {
			r.NetworkDomain.ID = types.Int64Null()
		}
		if resp.NetworkDomain.Name != nil {
			r.NetworkDomain.Name = types.StringValue(*resp.NetworkDomain.Name)
		} else {
			r.NetworkDomain.Name = types.StringNull()
		}
	}
	if r.NetworkServer == nil {
		r.NetworkServer = &ZoneAccount{}
	}
	if resp.NetworkServer == nil {
		r.NetworkServer = nil
	} else {
		r.NetworkServer = &ZoneAccount{}
		if resp.NetworkServer.ID != nil {
			r.NetworkServer.ID = types.Int64Value(*resp.NetworkServer.ID)
		} else {
			r.NetworkServer.ID = types.Int64Null()
		}
		if resp.NetworkServer.Name != nil {
			r.NetworkServer.Name = types.StringValue(*resp.NetworkServer.Name)
		} else {
			r.NetworkServer.Name = types.StringNull()
		}
	}
	if resp.NextRunDate != nil {
		r.NextRunDate = types.StringValue(resp.NextRunDate.Format(time.RFC3339))
	} else {
		r.NextRunDate = types.StringNull()
	}
	if r.Owner == nil {
		r.Owner = &ZoneAccount{}
	}
	if resp.Owner == nil {
		r.Owner = nil
	} else {
		r.Owner = &ZoneAccount{}
		if resp.Owner.ID != nil {
			r.Owner.ID = types.Int64Value(*resp.Owner.ID)
		} else {
			r.Owner.ID = types.Int64Null()
		}
		if resp.Owner.Name != nil {
			r.Owner.Name = types.StringValue(*resp.Owner.Name)
		} else {
			r.Owner.Name = types.StringNull()
		}
	}
	if resp.ProvisioningProxy != nil {
		r.ProvisioningProxy = types.StringValue(*resp.ProvisioningProxy)
	} else {
		r.ProvisioningProxy = types.StringNull()
	}
	if resp.RegionCode != nil {
		r.RegionCode = types.StringValue(*resp.RegionCode)
	} else {
		r.RegionCode = types.StringNull()
	}
	if resp.ScalePriority != nil {
		r.ScalePriority = types.Int64Value(*resp.ScalePriority)
	} else {
		r.ScalePriority = types.Int64Null()
	}
	if resp.SecurityMode != nil {
		r.SecurityMode = types.StringValue(*resp.SecurityMode)
	} else {
		r.SecurityMode = types.StringNull()
	}
	if r.SecurityServer == nil {
		r.SecurityServer = &ZoneAccount{}
	}
	if resp.SecurityServer == nil {
		r.SecurityServer = nil
	} else {
		r.SecurityServer = &ZoneAccount{}
		if resp.SecurityServer.ID != nil {
			r.SecurityServer.ID = types.Int64Value(*resp.SecurityServer.ID)
		} else {
			r.SecurityServer.ID = types.Int64Null()
		}
		if resp.SecurityServer.Name != nil {
			r.SecurityServer.Name = types.StringValue(*resp.SecurityServer.Name)
		} else {
			r.SecurityServer.Name = types.StringNull()
		}
	}
	if resp.ServerCount != nil {
		r.ServerCount = types.Int64Value(*resp.ServerCount)
	} else {
		r.ServerCount = types.Int64Null()
	}
	if resp.ServiceVersion != nil {
		r.ServiceVersion = types.StringValue(*resp.ServiceVersion)
	} else {
		r.ServiceVersion = types.StringNull()
	}
	if r.Stats == nil {
		r.Stats = &ZoneStats{}
	}
	if resp.Stats == nil {
		r.Stats = nil
	} else {
		r.Stats = &ZoneStats{}
		if r.Stats.ServerCounts == nil {
			r.Stats.ServerCounts = &ZoneStatsServerCounts{}
		}
		if resp.Stats.ServerCounts == nil {
			r.Stats.ServerCounts = nil
		} else {
			r.Stats.ServerCounts = &ZoneStatsServerCounts{}
			if resp.Stats.ServerCounts.All != nil {
				r.Stats.ServerCounts.All = types.Int64Value(*resp.Stats.ServerCounts.All)
			} else {
				r.Stats.ServerCounts.All = types.Int64Null()
			}
			if resp.Stats.ServerCounts.Baremetal != nil {
				r.Stats.ServerCounts.Baremetal = types.Int64Value(*resp.Stats.ServerCounts.Baremetal)
			} else {
				r.Stats.ServerCounts.Baremetal = types.Int64Null()
			}
			if resp.Stats.ServerCounts.ContainerHost != nil {
				r.Stats.ServerCounts.ContainerHost = types.Int64Value(*resp.Stats.ServerCounts.ContainerHost)
			} else {
				r.Stats.ServerCounts.ContainerHost = types.Int64Null()
			}
			if resp.Stats.ServerCounts.Host != nil {
				r.Stats.ServerCounts.Host = types.Int64Value(*resp.Stats.ServerCounts.Host)
			} else {
				r.Stats.ServerCounts.Host = types.Int64Null()
			}
			if resp.Stats.ServerCounts.Hypervisor != nil {
				r.Stats.ServerCounts.Hypervisor = types.Int64Value(*resp.Stats.ServerCounts.Hypervisor)
			} else {
				r.Stats.ServerCounts.Hypervisor = types.Int64Null()
			}
			if resp.Stats.ServerCounts.Unmanaged != nil {
				r.Stats.ServerCounts.Unmanaged = types.Int64Value(*resp.Stats.ServerCounts.Unmanaged)
			} else {
				r.Stats.ServerCounts.Unmanaged = types.Int64Null()
			}
			if resp.Stats.ServerCounts.VM != nil {
				r.Stats.ServerCounts.VM = types.Int64Value(*resp.Stats.ServerCounts.VM)
			} else {
				r.Stats.ServerCounts.VM = types.Int64Null()
			}
		}
	}
	if resp.Status != nil {
		r.Status = types.StringValue(*resp.Status)
	} else {
		r.Status = types.StringNull()
	}
	if resp.StatusDate != nil {
		r.StatusDate = types.StringValue(resp.StatusDate.Format(time.RFC3339))
	} else {
		r.StatusDate = types.StringNull()
	}
	if resp.StatusMessage != nil {
		r.StatusMessage = types.StringValue(*resp.StatusMessage)
	} else {
		r.StatusMessage = types.StringNull()
	}
	if resp.StorageMode != nil {
		r.StorageMode = types.StringValue(*resp.StorageMode)
	} else {
		r.StorageMode = types.StringNull()
	}
	if resp.Timezone != nil {
		r.Timezone = types.StringValue(*resp.Timezone)
	} else {
		r.Timezone = types.StringNull()
	}
	if resp.UserDataLinux != nil {
		r.UserDataLinux = types.StringValue(*resp.UserDataLinux)
	} else {
		r.UserDataLinux = types.StringNull()
	}
	if resp.UserDataWindows != nil {
		r.UserDataWindows = types.StringValue(*resp.UserDataWindows)
	} else {
		r.UserDataWindows = types.StringNull()
	}
	if resp.UUID != nil {
		r.UUID = types.StringValue(*resp.UUID)
	} else {
		r.UUID = types.StringNull()
	}
	if resp.Visibility != nil {
		r.Visibility = types.StringValue(*resp.Visibility)
	} else {
		r.Visibility = types.StringNull()
	}
	if r.ZoneType == nil {
		r.ZoneType = &ZoneZoneType{}
	}
	if resp.ZoneType == nil {
		r.ZoneType = nil
	} else {
		r.ZoneType = &ZoneZoneType{}
		if resp.ZoneType.Code != nil {
			r.ZoneType.Code = types.StringValue(*resp.ZoneType.Code)
		} else {
			r.ZoneType.Code = types.StringNull()
		}
		if resp.ZoneType.ID != nil {
			r.ZoneType.ID = types.Int64Value(*resp.ZoneType.ID)
		} else {
			r.ZoneType.ID = types.Int64Null()
		}
		if resp.ZoneType.Name != nil {
			r.ZoneType.Name = types.StringValue(*resp.ZoneType.Name)
		} else {
			r.ZoneType.Name = types.StringNull()
		}
	}
	if resp.ZoneTypeID != nil {
		r.ZoneTypeID = types.Int64Value(*resp.ZoneTypeID)
	} else {
		r.ZoneTypeID = types.Int64Null()
	}
}
